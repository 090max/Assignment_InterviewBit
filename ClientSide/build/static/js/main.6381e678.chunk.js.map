{"version":3,"sources":["logo.svg","components/ScheduleInput/ScheduleInput.js","components/Scheduler/Scheduler.js","components/Updater/Updater.js","components/Upcoming/Upcoming.js","App.js","reportWebVitals.js","index.js"],"names":["ScheduleInput","props","verifyEmail","email","emailArr","split","ok","forEach","element","test","emailRegex","convertToDoubleDigit","v","length","getTextDay","date","Date","getFullYear","toString","getMonth","getDate","getTextTime","getHours","getMinutes","checkDate","checkTime","time","separate","arr","join","handleFormSubmit","e","a","preventDefault","target","value","alert","prototype","isValid","this","getTime","startObject","endObject","updater","data","Interviewer","Interviewee","startTime","endTime","prevDetails","axios","put","InterviewId","ans","error","Interviews","post","console","log","id","className","hasOwnProperty","onSubmit","type","defaultValue","Participants","required","StartTime","name","min","max","EndTime","placeholder","Scheduler","Updater","useState","interviewId","setInterviewId","setData","get","res","useEffect","getData","Upcoming","getDateText","d","map","row","App","val","setVal","handleButton","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6381e678.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst ScheduleInput = (props) => {\n  function emailRegex(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  function verifyEmail(email) {\n    var emailArr = email.split(\",\");\n    var ok = true;\n    emailArr.forEach((element) => {\n      if (!emailRegex(element)) ok = false;\n    });\n    return ok;\n  }\n\n  function convertToDoubleDigit(v) {\n    if (v.length == 1) return \"0\" + v;\n    return v;\n  }\n\n  function getTextDay(date) {\n    if (!date) return date;\n    date = new Date(date);\n    return (\n      date.getFullYear().toString() +\n      \"-\" +\n      (date.getMonth() + 1).toString() +\n      \"-\" +\n      date.getDate().toString()\n    );\n  }\n\n  function getTextTime(date) {\n    if (!date) return date;\n    date = new Date(date);\n\n    return (\n      convertToDoubleDigit(date.getHours().toString()) +\n      \":\" +\n      convertToDoubleDigit(date.getMinutes().toString())\n    );\n  }\n\n  function checkDate(date) {\n    if (date.split(\"-\").length != 3) return false;\n    return true;\n  }\n\n  function checkTime(time) {\n    if (time.split(\":\").length != 2) return false;\n    return true;\n  }\n\n  function checkDateTime(date) {}\n\n  function separate(arr) {\n    return arr.join(\",\");\n  }\n\n  async function handleFormSubmit(e) {\n    e.preventDefault();\n    if (verifyEmail(e.target[0].value) == 0) {\n      alert(\"Please Check the Intervier email\");\n      return;\n    }\n\n    if (verifyEmail(e.target[1].value) == 0) {\n      alert(\"Please Check the Interviewee email\");\n      return;\n    }\n\n    if (!checkDate(e.target[2].value)) {\n      alert(\"Please check the Start Date format YYYY-MM-DD\");\n      return;\n    }\n\n    if (!checkTime(e.target[3].value)) {\n      alert(\"Please check the Start Time format HH:MM\");\n      return;\n    }\n\n    if (!checkDate(e.target[4].value)) {\n      alert(\"Please check the End Date format YYYY-MM-DD\");\n      return;\n    }\n\n    if (!checkTime(e.target[5].value)) {\n      alert(\"Please check the End Time format HH:MM\");\n      return;\n    }\n\n    Date.prototype.isValid = function () {\n      return this.getTime() === this.getTime();\n    };\n    var startObject = new Date(e.target[2].value + \" \" + e.target[3].value);\n    if (!startObject.isValid()) {\n      alert(\"Invalid Start Date Time\");\n      return;\n    }\n    var endObject = new Date(e.target[4].value + \" \" + e.target[5].value);\n    if (!endObject.isValid()) {\n      alert(\"Invalid End Date Time\");\n      return;\n    }\n\n    if (endObject < startObject) {\n      alert(\"Start Time should be less than end time\");\n      return;\n    }\n\n    if (startObject < new Date()) {\n      alert(\"The start Time should be greater than the current time\");\n      return;\n    }\n\n    if (props.updater == 1) {\n      let data = {\n        Interviewer: e.target[0].value.split(\",\"),\n        Interviewee: e.target[1].value.split(\",\"),\n        startTime: startObject,\n        endTime: endObject,\n        prevDetails: props.data,\n      };\n\n      var ans = await axios.put(\n        \"http://localhost:8080/updateInterview?InterviewId=\" +\n          props.InterviewId,\n        data\n      );\n      if (ans.data.error) {\n        if (ans.data.error == \"overlapping\") {\n          alert(\"Overlapping with \" + ans.data.Interviews);\n        } else alert(ans.data.error);\n      } else {\n        alert(\"Update success !\");\n      }\n    } else {\n      let data = {\n        Interviewer: e.target[0].value.split(\",\"),\n        Interviewee: e.target[1].value.split(\",\"),\n        startTime: startObject,\n        endTime: endObject,\n      };\n\n      var ans = await axios.post(\n        \"http://localhost:8080/scheduleInterview\",\n        data\n      );\n\n      if (ans.data.error) {\n        if (ans.data.error == \"overlapping\") {\n          alert(\"Overlapping with \" + ans.data.Interviews.toString());\n        } else alert(ans.data.error);\n      } else {\n        console.log(ans.data);\n        alert(\"Interview Scheduled id \" + ans.data.id.toString());\n      }\n    }\n  }\n\n  return (\n    <div className=\"\">\n      {props.updater == 0 && !props.hasOwnProperty(\"data\") ? (\n        <form className=\"schedulerForm\" onSubmit={handleFormSubmit}>\n          <input type=\"text\" placeholder=\"Enter Interviewer email\" required />\n          <br />\n          <input type=\"text\" placeholder=\"Enter Interviewee email\" required />\n          <br />\n          <label>Choose start time for interview</label>\n          <br />\n          <label>Enter Date</label>\n          <input type=\"text\" placeholder=\"YYYY-MM-DD\" required />\n          <label>Enter Time</label>\n          <input type=\"time\" name=\"time\" min=\"00:00\" max=\"23:59\" />\n          <br />\n\n          <label>Choose end time for interview</label>\n          <br />\n          <label>Enter Date</label>\n          <input type=\"text\" placeholder=\"YYYY-MM-DD\" required />\n          <label>Enter Time</label>\n          <input type=\"time\" name=\"time\" min=\"00:00\" max=\"23:59\" />\n          <br />\n          <input type=\"submit\" value=\"Submit\"></input>\n        </form>\n      ) : (\n        <form className=\"schedulerForm\" onSubmit={handleFormSubmit}>\n          <input\n            type=\"text\"\n            defaultValue={separate(props.data.Participants.Interviewer)}\n            required\n          />\n          <br />\n          <input\n            type=\"text\"\n            defaultValue={separate(props.data.Participants.Interviewee)}\n            required\n          />\n          <br />\n          <label>Choose start time for interview</label>\n          <br />\n          <label>Enter Date</label>\n          <input\n            type=\"text\"\n            defaultValue={getTextDay(props.data.StartTime)}\n            required\n          />\n          <label>Enter Time</label>\n          <input\n            type=\"time\"\n            name=\"time\"\n            defaultValue={getTextTime(props.data.StartTime).toString()}\n            min=\"00:00\"\n            max=\"23:59\"\n          />\n          <br />\n\n          <label>Choose end time for interview</label>\n          <br />\n          <label>Enter Date</label>\n          <input\n            type=\"text\"\n            defaultValue={getTextDay(props.data.EndTime)}\n            required\n          />\n          <label>Enter Time</label>\n          <input\n            type=\"time\"\n            name=\"time\"\n            defaultValue={getTextTime(props.data.EndTime).toString()}\n            min=\"00:00\"\n            max=\"23:59\"\n          />\n          <br />\n          <input type=\"submit\" value=\"Update\"></input>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ScheduleInput;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SchedulerInput from \"../ScheduleInput/ScheduleInput.js\";\n\nconst Scheduler = () => {\n  return <SchedulerInput updater={0} />;\n};\n\nexport default Scheduler;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ScheduleInput from \"../ScheduleInput/ScheduleInput.js\";\nconst Updater = () => {\n  const [interviewId, setInterviewId] = useState(\"\");\n  const [data, setData] = useState({\n    Interviewer: [],\n    Interviewee: [],\n    startTime: \"\",\n    endTime: \"\",\n  });\n\n  function handleIdFetch(e) {\n    e.preventDefault();\n    setInterviewId(e.target[0].value);\n  }\n\n  async function getData() {\n    var res = await axios.get(\n      \"http://localhost:8080/getInterviewDetail?InterviewId=\" + interviewId\n    );\n\n    if (res.data.error) {\n      alert(res.data.error);\n      return;\n    } else setData(res.data.data);\n  }\n\n  useEffect(() => {\n    if (interviewId != \"\") {\n      getData();\n    }\n  }, [interviewId]);\n\n  return (\n    <div>\n      {interviewId == \"\" || data.startTime == \"\" ? (\n        <div>\n          <form className=\"InterviewIdFetch\" onSubmit={handleIdFetch}>\n            <input type=\"text\" placeholder=\"InterviewId\" />\n            <br />\n            <input type=\"submit\" value=\"submit\" />\n          </form>\n        </div>\n      ) : (\n        <ScheduleInput updater=\"1\" InterviewId={interviewId} data={data} />\n      )}\n    </div>\n  );\n};\n\nexport default Updater;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Upcoming = () => {\n  const [data, setData] = useState([]);\n\n  async function getData() {\n    var ans = await axios.get(\"http://localhost:8080/upcomingSchedule\");\n    if (ans.data.error) alert(ans.data.error);\n    else if (ans.data.length != 0) setData(ans.data.data);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function getDateText(date) {\n    var d = new Date(date);\n\n    return (\n      d.getFullYear().toString() +\n      \"-\" +\n      (d.getMonth() + 1).toString() +\n      \"-\" +\n      d.getDate() +\n      \" \" +\n      d.getHours().toString() +\n      \":\" +\n      d.getMinutes().toString()\n    );\n  }\n\n  return (\n    <div>\n      {data.length != 0 ? (\n        <div className=\"Upcoming_content\">\n          {data.map((row) => (\n            <div className=\"content_box\">\n              <label>{\"InterviewId : \"} </label> {row.InterviewId}\n              <br />\n              <label>{\"Interviewer : \"} </label>{\" \"}\n              {row.Participants.Interviewer.join(\" , \")}\n              <br />\n              <label>{\"Interviewee : \"} </label>{\" \"}\n              {row.Participants.Interviewee.join(\" , \")}\n              <br />\n              <label>{\"StartTime : \"} </label> {getDateText(row.StartTime)}\n              <br />\n              <label>{\"EndTime : \"} </label> {getDateText(row.EndTime)}\n              <br />\n              <br />\n            </div>\n          ))}\n        </div>\n      ) : (\n        <h1>No Upcoming Interviews</h1>\n      )}\n    </div>\n  );\n};\n\nexport default Upcoming;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Scheduler from \"./components/Scheduler/Scheduler.js\";\nimport Updater from \"./components/Updater/Updater.js\";\nimport Upcoming from \"./components/Upcoming/Upcoming.js\";\n\nimport { useState } from \"react\";\nfunction App() {\n  const [val, setVal] = useState(0);\n\n  function handleButton(id) {\n    console.log(id);\n    setVal(id);\n  }\n  return (\n    <div className=\"outerFrame\">\n      <div className=\"content\">\n        {val == 0 ? <Scheduler /> : \"\"}\n        {val == 1 ? <Upcoming /> : \"\"}\n        {val == 2 ? <Updater /> : \"\"}\n      </div>\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            handleButton(0);\n          }}\n        >\n          Schedule\n        </button>\n        <button\n          onClick={() => {\n            handleButton(1);\n          }}\n        >\n          Get status\n        </button>\n        <button\n          onClick={() => {\n            handleButton(2);\n          }}\n        >\n          Update\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}